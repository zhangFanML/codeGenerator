<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD SQL Map Config 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
	<!-- mybatis 性能优化  -->
	<settings>
		<!-- 全局映射器启用缓存 -->
		<setting name="cacheEnabled" value="true" />
		<!-- 查询时，关闭关联对象即时加载以提高性能 -->
		<setting name="lazyLoadingEnabled" value="false" />
		<!-- 设置关联对象加载的形态，此处为按需加载字段(加载字段由SQL指定)，不会加载关联表的所有字段，以提高性能 -->
		<setting name="aggressiveLazyLoading" value="false" />
		<!-- 对于未知的SQL查询，允许返回不同的结果集以达到通用的效果 -->
		<setting name="multipleResultSetsEnabled" value="true" />
		<!-- 是否可以使用列的别名 (取决于驱动的兼容性) default:true -->
		<setting name="useColumnLabel" value="true" />
		<!-- 允许使用自定义的主键值(比如由程序生成的UUID 32位编码作为键值)，数据表的PK生成策略将被覆盖 -->
		<setting name="useGeneratedKeys" value="true" />
		<!-- 给予被嵌套的resultMap以字段-属性的映射支持 -->
		<setting name="autoMappingBehavior" value="FULL" />
		<!-- 对于批量更新操作缓存SQL以提高性能  -->
		<!--
			这是默认的执行类型
			SIMPLE :简单
			REUSE:执行器可能重复使用prepared statements 语句
			BATCH:执行器可以重复执行语句和批量更新
		-->
		<setting name="defaultExecutorType" value="REUSE" />
		<!-- 数据库超过25000秒仍未响应则超时 -->
		<setting name="defaultStatementTimeout" value="25000" />
		<!--[是否启用 行内嵌套语句  defaut:false]-->
		<setting name="safeRowBoundsEnabled" value="false" />
		<!--[是否 启用  数据中 A_column 自动映射 到 java类中驼峰命名的属性 default:fasle]-->
		<setting name="mapUnderscoreToCamelCase" value="false"/>
		<!--设置本地缓存范围 session:就会有数据的共享  statement:语句范围 (这样就不会有数据的共享 ) defalut:session-->
		<setting name="localCacheScope" value="SESSION" />
		<!--设置但JDBC类型为空时,某些驱动程序 要指定值,default:OTHER-->
		<setting name="jdbcTypeForNull" value="NULL" />
		<!--返回字段为空时，返回null-->
		<setting name="callSettersOnNulls" value="true"/>
		<!--设置触发延迟加载的方法-->
		<setting name="lazyLoadTriggerMethods" value="equals,clone,hashCode,toString" />

		<!--打印sql log日志-->
		<!--<setting name="logImpl" value="STDOUT_LOGGING" />-->
		<!--<setting name="logImpl" value="LOG4J2" />-->
	</settings>

	<typeAliases>
		<typeAlias type="com.git.easyloan.entity.PageData" alias="pd"/>
		<!--自定义一个page 用于在datalist中实用foreach-->
		<typeAlias type="com.git.easyloan.entity.PageForMybatisPlugin" alias="mpage"/>
		<!-- 分页 -->
		<typeAlias type="com.git.easyloan.entity.Page" alias="Page"/>
	</typeAliases>
	<typeHandlers>
		<typeHandler javaType="java.math.BigDecimal" jdbcType="NUMERIC" handler="org.apache.ibatis.type.BigDecimalTypeHandler" />
		<typeHandler javaType="java.lang.String" jdbcType="CLOB" handler="com.git.easyloan.utils.utils.OracleClobTypeHandlerCallback"/>
	</typeHandlers>

	<plugins>
		<plugin interceptor="com.git.easyloan.utils.PagePlugin">
			<property name="dialect" value="mysql"/>
			<property name="pageSqlId" value=".*listPage.*"/>
		</plugin>
		<!--<plugin interceptor="com.git.easyloan.commons.plugin.DictoryPlugin">-->
			<!--<property name="properties" value="property-key=property-value"/>-->
		<!--</plugin>-->
	</plugins>

</configuration>